org: sebastianchu
service: api-compras

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  timeout: 30
  iam:
    role: arn:aws:iam::971808350791:role/LabRole
  environment:
    TABLE_NAME: ComprasTable-${self:provider.stage}
    PRODUCTOS_TABLE_NAME: ProductosTable-${self:provider.stage}
    COMPRAS_BUCKET: compras-por-tenant-${self:provider.stage}
    JWT_SECRET: ${env:JWT_SECRET}

package:
  include:
    - node_modules/**
    - handler.js
    - utils/**

functions:
  comprar:
    handler: handler.comprar
    events:
      - http:
          path: compras
          method: post
          cors: true

  obtenerCompras:
    handler: handler.obtenerCompras
    events:
      - http:
          path: compras
          method: get
          cors: true

  swaggerDocs:
    handler: handler.swaggerDocs
    events:
      - http:
          path: docs/{proxy+}
          method: get
          cors: true

  actualizarCompras:
    handler: handler.actualizarCompras
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [ComprasTable, StreamArn]
          batchSize: 1
          startingPosition: LATEST

resources:
  Resources:
    ComprasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ComprasTable-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    ComprasS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: compras-por-tenant-${self:provider.stage}

